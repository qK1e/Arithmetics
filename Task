Задача «арифметические выражения»

Напишите программу (математический модуль) для работы с арифметическими выражениями.
Арифметическое выражение должно быть задано интерфейсом (который используют все другие классы) или абстрактным классом (который наследуют все другие классы) Expression.
Конкретные реализации арифметических выражений - это классы число Num, переменная Variable, сумма, произведение, частное и возведение в степень.
Дополнительно можете реализовать некоторые другие функции, например синус или логарифм.

Должны быть реализованы:
0. Конструктор Num из числа, конструктор Variable из char или String, конструкторы арифметических операций от двух Expression.
Конструктор для каждого класса "математическая функция" (если есть) - как минимум от Expression.
1. Возможность полного копирования выражения (свой метод, либо реализация стандартного интерфейса Cloneable).
2. Возможность сложения, умножения и возведения в степень для пары выражений с получением нового выражения - т.е. вхождение соответствующих методов в Expression. 
3. Дифференцирование выражения по заданному имени переменной с получением нового выражения. Дифференцирование по несуществующей переменной даёт 0.
4. toString() для всего!!!
5. Вычисление значения double от одного аргумента double, если у выражения не более одной независимой переменной (и выброс исключения в противном случае); 
6. Возможность узнать полный набор имён аргументов - например в виде массива или HashSet строк/символов. Вычисление значения в виде нового Expression - метод от двух аргументов - имя переменной и значение переменной. Несуществующее имя игнорируется, просто создаётся копия выражения.

...В принципе достаточно. Приветствуются (но не обязательны) любые разумные оптимизации и улучшение внешнего вида, например преобразования
x*3 -> 3*x
4*x+5*x -> 9*x
0*Expression -> 0
x*y*x ->x2y

-- Дополнительно
Вычисление значения от HashMap<Имена переменных, значения переменных> в виде Expression. Лишние имена игнорируются: x3/y (x=3, z=5) =27/y
Создание выражения из строки. Это не конструктор, а static-метод, потому что должен получиться Expression.
